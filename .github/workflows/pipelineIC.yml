name: Workflow
on:
  push:
  
jobs:
  SAST:
    runs-on: ubuntu-latest
    steps:
     
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
         
      - name: Clonacion de codigo
        uses: actions/checkout@v3
   
      - name: Build
        run: | 
          chmod 777 gradlew
          ./gradlew build
  
      - name: Validando existencia de proyecto en SonarCloud
        id: validateProjectOnSonar
        run: |
          #pwd
          #ls -R
          set +e
          curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/projects/create' -d 'name=${{ github.event.repository.name }}' -d 'project=${{ github.event.repository.name }}' -d 'organization=gotelloc' -d 'visibility=public'
          if [ $? -ne 0 ]; then
            echo "Proyecto ya existe en Sonarcloud"
            echo "::set-output name=proyectoExiste::1"
          else
            echo "Proyecto ${{ github.event.repository.name }} creado exitosamente en Sonarcloud"
            
            echo "Se establece rama main como rama por defecto"
            curl -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/project_branches/rename' -d 'name=main' -d 'project=${{ github.event.repository.name }}'
          fi
          set -e
  
      - name: Validando tipo de proyecto
        id: tipoProyecto
        if: steps.validateProjectOnSonar.outputs.proyectoExiste == '1'
        run: |
          pwd
          ls -R
          if [ -f "build.gradle" ]
          then
            echo "Proyecto Java"
            if grep -q 'id "org.sonarqube" version "3.3"' build.gradle
            then
              echo "El plugin de SonarCloud ya está presente en build.gradle"
            else
              sed -i '/id '\''java'\''/a \ \ \ \ id '\''org.sonarqube'\'' version '\''3.3'\''' build.gradle
              echo "El plugin de SonarCloud no estaba presente y se ha sido añadido a build.gradle"
              cat build.gradle
            fi
  
          else
            echo "Tipo de proyecto desconocido"
          fi
  
  
      - name: Enable execution gradlew
        run: | 
          chmod 777 gradlew
      
      - name: Run SonarQube analysis
        run: |
          ./gradlew sonarqube \
          -Dsonar.projectKey=${{ github.event.repository.name }} \
          -Dsonar.organization=gotelloc \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.branch.name=

#--------------------- SCA -------------------------------------------
      
  SCA:
    needs: SAST
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3      

    - name: Build
      id: build
      run: |
        #pwd
        #ls -R
        if [ -f "build.gradle" ]
        then
          echo "Utiliza build.gradle, proyecto Java"
          echo "Se habilita permiso de ejecución de archivo gradlew"
          chmod 777 gradlew
          ./gradlew build
        else
          echo "Otro tipo de proyecto"
        fi
    
    - name: Dependency Check
      uses: dependency-check/Dependency-Check_Action@1.1.0
      env:
        JAVA_HOME: /opt/jdk
      id: Depcheck
      with:
        project: '${{ github.event.repository.name }}'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --failOnCVSS 7
          --enableRetired

    - name: Upload Test result
      uses: actions/upload-artifact@master
      with:
        name: Depcheck report
        path: ${{github.workspace}}/reports
